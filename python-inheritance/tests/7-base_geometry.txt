==============================
The ``7-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

Import function from module:
       >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Completing Tests:
	   >>> bg = BaseGeometry()

	   >>> bg.area()
	   Traceback (most recent call last):
	   ...
	   Exception: area() is not implemented

	   >>> bg.integer_validator("name", "Barry")
	   Traceback (most recent call last):
	   ...
	   TypeError: name must be an integer

	   >>> bg.integer_validator("year", -3)
	   Traceback (most recent call last):
	   ...
	   ValueError: year must be greater than 0

	   >>> bg.integer_validator("kms", 0)
	   Traceback (most recent call last):
	   ...
	   ValueError: kms must be greater than 0

	   >>> bg.integer_validator("year", "5")
	   Traceback (most recent call last):
	   ...
	   TypeError: year must be an integer

	   >>> bg.integer_validator("age", 4)

	   >>> bg.integer_validator("year", 2022)

	   >>> bg.integer_validator()
	   Traceback (most recent call last):
	   ...
	   TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	   >>> bg.integer_validator("year", (4,))
	   Traceback (most recent call last):
	   ...
	   TypeError: year must be an integer

	   >>> bg.integer_validator("year", [2])
	   Traceback (most recent call last):
	   ...
	   TypeError: year must be an integer

	   >>> bg.integer_validator("year", True)
	   Traceback (most recent call last):
	   ...
	   TypeError: year must be an integer

	   >>> bg.integer_validator("year", None)
	   Traceback (most recent call last):
	   ...
	   TypeError: year must be an integer

	   >>> bg.integer_validator("age", {4, 3})
	   Traceback (most recent call last):
	   ...
	   TypeError: age must be an integer
